{"ast":null,"code":"var _jsxFileName = \"/home/david/Desktop/geolocalizerzcrmv2/client/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport Locationmarker from './Locationmarker';\nimport LocationInfoBox from './LocationInfoBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = ({\n  eventData,\n  center,\n  zoom\n}) => {\n  _s();\n\n  const [locationInfo, setLocationInfo] = useState(null);\n  const [infoBoxPopup, setinfoBoxPopup] = useState(false);\n  const markers = eventData.map(item => {\n    return /*#__PURE__*/_jsxDEV(Locationmarker, {\n      lat: item.Lat,\n      lng: item.Lng,\n      onClick: () => {\n        setLocationInfo({\n          Name: item.Name,\n          lng: item.Lat,\n          lat: item.Lng\n        });\n        setinfoBoxPopup(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLEMAPS_API_KEY\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      children: markers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), infoBoxPopup && /*#__PURE__*/_jsxDEV(LocationInfoBox, {\n      trigger: infoBoxPopup,\n      info: locationInfo,\n      setTrigger: setinfoBoxPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"v7lfbFVAokhNty+E4cyRYPYv49I=\");\n\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: 4.7109886,\n    lng: -74.072092\n  },\n  zoom: 6\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/david/Desktop/geolocalizerzcrmv2/client/src/components/Map.js"],"names":["useState","GoogleMapReact","Locationmarker","LocationInfoBox","Map","eventData","center","zoom","locationInfo","setLocationInfo","infoBoxPopup","setinfoBoxPopup","markers","map","item","Lat","Lng","Name","lng","lat","key","process","env","REACT_APP_GOOGLEMAPS_API_KEY","defaultProps"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,MAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAA8B;AAAA;;AACtC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMY,OAAO,GAAGP,SAAS,CAACQ,GAAV,CAAcC,IAAI,IAAG;AACjC,wBAAO,QAAC,cAAD;AACP,MAAA,GAAG,EAAGA,IAAI,CAACC,GADJ;AAEP,MAAA,GAAG,EAAGD,IAAI,CAACE,GAFJ;AAGP,MAAA,OAAO,EAAE,MAAK;AACNP,QAAAA,eAAe,CAAC;AACZQ,UAAAA,IAAI,EAAEH,IAAI,CAACG,IADC;AAEZC,UAAAA,GAAG,EAAEJ,IAAI,CAACC,GAFE;AAGZI,UAAAA,GAAG,EAAEL,IAAI,CAACE;AAHE,SAAD,CAAf;AAKAL,QAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AAVE;AAAA;AAAA;AAAA;AAAA,YAAP;AAaH,GAde,CAAhB;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,cAAD;AACI,MAAA,gBAAgB,EAAE;AACdS,QAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADH,OADtB;AAIQ,MAAA,aAAa,EAAEjB,MAJvB;AAKQ,MAAA,WAAW,EAAEC,IALrB;AAAA,gBAOKK;AAPL;AAAA;AAAA;AAAA;AAAA,YADJ,EAUKF,YAAY,iBAAI,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEA,YAA1B;AAAwC,MAAA,IAAI,EAAEF,YAA9C;AAA4D,MAAA,UAAU,EAAEG;AAAxE;AAAA;AAAA;AAAA;AAAA,YAVrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlCD;;GAAMP,G;;KAAAA,G;AA0CNA,GAAG,CAACoB,YAAJ,GAAmB;AACflB,EAAAA,MAAM,EAAC;AACHa,IAAAA,GAAG,EAAE,SADF;AAEHD,IAAAA,GAAG,EAAE,CAAC;AAFH,GADQ;AAKfX,EAAAA,IAAI,EAAE;AALS,CAAnB;AASA,eAAeH,GAAf","sourcesContent":["import {useState} from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport Locationmarker from './Locationmarker'\nimport LocationInfoBox from './LocationInfoBox'\n\nconst Map = ({eventData, center,zoom}) => {\n    const [locationInfo, setLocationInfo] = useState(null);\n    const [infoBoxPopup, setinfoBoxPopup] = useState(false);\n\n    const markers = eventData.map(item =>{\n        return <Locationmarker \n        lat ={item.Lat}\n        lng ={item.Lng} \n        onClick={()=> {\n                setLocationInfo({\n                    Name: item.Name,\n                    lng: item.Lat,\n                    lat: item.Lng, \n                    })\n                setinfoBoxPopup(true)\n            }\n        } \n    />\n    })\n\n    return (\n        <div className=\"map\">\n            <GoogleMapReact\n                bootstrapURLKeys={{\n                    key: process.env.REACT_APP_GOOGLEMAPS_API_KEY\n                }}\n                    defaultCenter={center}\n                    defaultZoom={zoom}\n            >\n                {markers}\n            </GoogleMapReact>\n            {infoBoxPopup && <LocationInfoBox trigger={infoBoxPopup} info={locationInfo} setTrigger={setinfoBoxPopup} />}\n        </div>\n    )\n}\n\n\n\n\n\n\n\nMap.defaultProps = {\n    center:{\n        lat: 4.7109886,\n        lng: -74.072092\n    },\n    zoom: 6\n\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}